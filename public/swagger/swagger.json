{
    "swagger": "2.0",
    "info": {
        "description": "Documentation des API disponible pour gérer les articles de notre application",
        "version": "0.1.1",
        "title": "Demo Blog",
        "contact": {
            "email": "tricard.sylvain@gmail.com"
        }
    },
    "host": "localhost:8000",
    "basePath": "/api",
    "tags": [
        {
            "name": "users",
            "description": "Permet de gérer les utilisateurs de l'application"
        },
        {
            "name": "articles",
            "description": "Permet de gérer les articles de l'application"
        },
        {
            "name": "articles-status",
            "description": "Permet de gérer les différents statuts d'un article"
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/users": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Enregistre un nouvel utilisateur",
                "description": "",
                "operationId": "storeUser",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Nom de l'utilisateur",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Email de l'utilisateur",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Succès - Ressource créée",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Récupère un ou plusieurs utilisateurs",
                "description": "Des filtres sont disponibles pour ne pas récupérer tous les utilisateurs",
                "operationId": "findUsers",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Nom de l'utilisateur",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email de l'utilisateur",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/user/{userId}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Récupère les infos d'un utilisateur",
                "description": "Retourne les données d'un seul utilisateur",
                "operationId": "getUserById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id de l'utilisateur",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Modifie un utilisateur existant",
                "description": "",
                "operationId": "updateUser",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id de l'utilisateur",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Nom de l'utilisateur",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Email de l'utilisateur",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Modifie un utilisateur existant",
                "description": "",
                "operationId": "deleteUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id de l'utilisateur",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "apikey",
            "in": "header"
        }
    },
    "definitions": {
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            },
            "xml": {
                "name": "User"
            }
        }
    },
    "externalDocs": {
        "description": "Repository application",
        "url": "https://github.com/stricard/demo-blog"
    }
}
